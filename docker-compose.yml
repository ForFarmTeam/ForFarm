services:
  db:
    image: postgres:16-alpine
    container_name: forfarm_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-@Password123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: forfarm_rabbitmq
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: forfarm_backend
    build:
      context: ./backend
      dockerfile: go.dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/.env
    # If running migrations inside the container:
    # command: sh -c "/app/api migrate && /app/api api"
    # If running migrations separately (preferred):
    command: ["api"] # Runs the default command in the Dockerfile
    volumes: # Optional: Mount source for live reload during dev (remove for prod builds)
      - ./backend:/app
    # networks:
    #   - forfarm-net

  frontend:
    container_name: forfarm_frontend
    build:
      context: ./frontend
      dockerfile: next.dockerfile
      # args:
      #   NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    # volumes: # Mount source for live reload during dev (remove for prod builds)
    #   - ./frontend:/app
    #   - /app/node_modules # Avoid overwriting node_modules
    #   - /app/.next # Avoid overwriting build artifacts
    # networks:
    #   - forfarm-net

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
# networks:
#   forfarm-net:
#     driver: bridge
